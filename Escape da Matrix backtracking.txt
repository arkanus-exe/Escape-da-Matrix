Escape da Matrix 



O backtracking é usado para movimentar inimigo em direção ao jogador Neo de forma inteligente, explorando o labirinto. Ele funciona como uma busca recursiva que tenta encontrar o caminho mais próximo para alcançar o jogador, evitando obstáculos e paredes.

Como o backtracking funciona no código:
Função enemyBacktrack:

Essa função é chamada periodicamente (a cada 3 segundos) para mover o agente.
Ela itera sobre todos os agentes (caso existam vários) e chama a função moveEnemy para cada um deles.
Função moveEnemy:

Essa função implementa o algoritmo de backtracking.
Ela tenta mover o agente em todas as direções possíveis (cima, baixo, esquerda, direita) até encontrar o jogador ou um caminho válido.
Se o agente alcançar o jogador, a função gameOver é chamada.
Passos do algoritmo:
Exploração:

O agente tenta se mover para uma célula vizinha válida (não é parede e está dentro dos limites do labirinto).
Marcação de visitados:

As posições já visitadas são armazenadas no objeto visited para evitar loops infinitos.
Recursão:

Se o agente encontrar uma célula válida, ele se move para essa célula e chama moveEnemy novamente para continuar a busca.
Condição de parada:

O algoritmo para quando o agente alcança o jogador ou não há mais células válidas para explorar.
Vantagens do backtracking:
Permite que o agente encontre o jogador mesmo em labirintos complexos.
Evita loops e movimentos aleatórios, tornando o comportamento do agente mais inteligente.
Limitações:
Pode ser lento em labirintos muito grandes, pois explora todas as possibilidades.
